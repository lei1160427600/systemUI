/**
 * Created by xue on 2017/1/20.
 */
!function (a) {
    "function" == typeof define && define.amd ? define(["jquery"], a) : a("object" == typeof exports ? require("jquery") : jQuery)
}(function (a) {
    function b(b) {
        var c, d, e, f = arguments.length, g = window[b], h = arguments, i = h[1];
        if (f < 2)throw new Error("Minimum 2 arguments must be given");
        if (a.isArray(i)) {
            d = {};
            for (var j in i) {
                c = i[j];
                try {
                    d[c] = JSON.parse(g.getItem(c))
                } catch (k) {
                    d[c] = g.getItem(c)
                }
            }
            return d
        }
        if (2 != f) {
            try {
                d = JSON.parse(g.getItem(i))
            } catch (k) {
                throw new ReferenceError(i + " is not defined in this storage")
            }
            for (var j = 2; j < f - 1; j++)if (d = d[h[j]], void 0 === d)throw new ReferenceError([].slice.call(h, 1, j + 1).join(".") + " is not defined in this storage");
            if (a.isArray(h[j])) {
                e = d, d = {};
                for (var l in h[j])d[h[j][l]] = e[h[j][l]];
                return d
            }
            return d[h[j]]
        }
        try {
            return JSON.parse(g.getItem(i))
        } catch (k) {
            return g.getItem(i)
        }
    }

    function c(b) {
        var c, d, e = arguments.length, f = window[b], g = arguments, h = g[1], i = g[2], j = {};
        if (e < 2 || !a.isPlainObject(h) && e < 3)throw new Error("Minimum 3 arguments must be given or second parameter must be an object");
        if (a.isPlainObject(h)) {
            for (var k in h)c = h[k], a.isPlainObject(c) ? f.setItem(k, JSON.stringify(c)) : f.setItem(k, c);
            return h
        }
        if (3 == e)return "object" == typeof i ? f.setItem(h, JSON.stringify(i)) : f.setItem(h, i), i;
        try {
            d = f.getItem(h), null != d && (j = JSON.parse(d))
        } catch (l) {
        }
        d = j;
        for (var k = 2; k < e - 2; k++)c = g[k], d[c] && a.isPlainObject(d[c]) || (d[c] = {}), d = d[c];
        return d[g[k]] = g[k + 1], f.setItem(h, JSON.stringify(j)), j
    }

    function d(b) {
        var c, d, e = arguments.length, f = window[b], g = arguments, h = g[1];
        if (e < 2)throw new Error("Minimum 2 arguments must be given");
        if (a.isArray(h)) {
            for (var i in h)f.removeItem(h[i]);
            return !0
        }
        if (2 == e)return f.removeItem(h), !0;
        try {
            c = d = JSON.parse(f.getItem(h))
        } catch (j) {
            throw new ReferenceError(h + " is not defined in this storage")
        }
        for (var i = 2; i < e - 1; i++)if (d = d[g[i]], void 0 === d)throw new ReferenceError([].slice.call(g, 1, i).join(".") + " is not defined in this storage");
        if (a.isArray(g[i]))for (var k in g[i])delete d[g[i][k]]; else delete d[g[i]];
        return f.setItem(h, JSON.stringify(c)), !0
    }

    function e(b, c) {
        var e = h(b);
        for (var f in e)d(b, e[f]);
        if (c)for (var f in a.namespaceStorages)i(f)
    }

    function f(c) {
        var d = arguments.length, e = arguments, g = (window[c], e[1]);
        if (1 == d)return 0 == h(c).length;
        if (a.isArray(g)) {
            for (var i = 0; i < g.length; i++)if (!f(c, g[i]))return !1;
            return !0
        }
        try {
            var j = b.apply(this, arguments);
            a.isArray(e[d - 1]) || (j = {totest: j});
            for (var i in j)if (!(a.isPlainObject(j[i]) && a.isEmptyObject(j[i]) || a.isArray(j[i]) && !j[i].length) && j[i])return !1;
            return !0
        } catch (k) {
            return !0
        }
    }

    function g(c) {
        var d = arguments.length, e = arguments, f = (window[c], e[1]);
        if (d < 2)throw new Error("Minimum 2 arguments must be given");
        if (a.isArray(f)) {
            for (var h = 0; h < f.length; h++)if (!g(c, f[h]))return !1;
            return !0
        }
        try {
            var i = b.apply(this, arguments);
            a.isArray(e[d - 1]) || (i = {totest: i});
            for (var h in i)if (void 0 === i[h] || null === i[h])return !1;
            return !0
        } catch (j) {
            return !1
        }
    }

    function h(c) {
        var d = arguments.length, e = window[c], f = arguments, g = (f[1], []), h = {};
        if (h = d > 1 ? b.apply(this, f) : e, h._cookie)for (var i in a.cookie())"" != i && g.push(i.replace(h._prefix, "")); else for (var j in h)g.push(j);
        return g
    }

    function i(b) {
        if (!b || "string" != typeof b)throw new Error("First parameter must be a string");
        m ? (window.localStorage.getItem(b) || window.localStorage.setItem(b, "{}"), window.sessionStorage.getItem(b) || window.sessionStorage.setItem(b, "{}")) : (window.localCookieStorage.getItem(b) || window.localCookieStorage.setItem(b, "{}"), window.sessionCookieStorage.getItem(b) || window.sessionCookieStorage.setItem(b, "{}"));
        var c = {
            localStorage: a.extend({}, a.localStorage, {_ns: b}),
            sessionStorage: a.extend({}, a.sessionStorage, {_ns: b})
        };
        return a.cookie && (window.cookieStorage.getItem(b) || window.cookieStorage.setItem(b, "{}"), c.cookieStorage = a.extend({}, a.cookieStorage, {_ns: b})), a.namespaceStorages[b] = c, c
    }

    function j(a) {
        var b = "jsapi";
        try {
            return !!window[a] && (window[a].setItem(b, b), window[a].removeItem(b), !0)
        } catch (c) {
            return !1
        }
    }

    var k = "ls_", l = "ss_", m = j("localStorage"), n = {
        _type: "", _ns: "", _callMethod: function (a, b) {
            var c = [this._type], b = Array.prototype.slice.call(b), d = b[0];
            return this._ns && c.push(this._ns), "string" == typeof d && d.indexOf(".") !== -1 && (b.shift(), [].unshift.apply(b, d.split("."))), [].push.apply(c, b), a.apply(this, c)
        }, get: function () {
            return this._callMethod(b, arguments)
        }, set: function () {
            var b = arguments.length, d = arguments, e = d[0];
            if (b < 1 || !a.isPlainObject(e) && b < 2)throw new Error("Minimum 2 arguments must be given or first parameter must be an object");
            if (a.isPlainObject(e) && this._ns) {
                for (var f in e)c(this._type, this._ns, f, e[f]);
                return e
            }
            var g = this._callMethod(c, d);
            return this._ns ? g[e.split(".")[0]] : g
        }, remove: function () {
            if (arguments.length < 1)throw new Error("Minimum 1 argument must be given");
            return this._callMethod(d, arguments)
        }, removeAll: function (a) {
            return this._ns ? (c(this._type, this._ns, {}), !0) : e(this._type, a)
        }, isEmpty: function () {
            return this._callMethod(f, arguments)
        }, isSet: function () {
            if (arguments.length < 1)throw new Error("Minimum 1 argument must be given");
            return this._callMethod(g, arguments)
        }, keys: function () {
            return this._callMethod(h, arguments)
        }
    };
    if (a.cookie) {
        window.name || (window.name = Math.floor(1e8 * Math.random()));
        var o = {
            _cookie: !0, _prefix: "", _expires: null, _path: null, _domain: null, setItem: function (b, c) {
                a.cookie(this._prefix + b, c, {expires: this._expires, path: this._path, domain: this._domain})
            }, getItem: function (b) {
                return a.cookie(this._prefix + b)
            }, removeItem: function (b) {
                return a.removeCookie(this._prefix + b)
            }, clear: function () {
                for (var b in a.cookie())"" != b && (!this._prefix && b.indexOf(k) === -1 && b.indexOf(l) === -1 || this._prefix && 0 === b.indexOf(this._prefix)) && a.removeCookie(b)
            }, setExpires: function (a) {
                return this._expires = a, this
            }, setPath: function (a) {
                return this._path = a, this
            }, setDomain: function (a) {
                return this._domain = a, this
            }, setConf: function (a) {
                return a.path && (this._path = a.path), a.domain && (this._domain = a.domain), a.expires && (this._expires = a.expires), this
            }, setDefaultConf: function () {
                this._path = this._domain = this._expires = null
            }
        };
        m || (window.localCookieStorage = a.extend({}, o, {
            _prefix: k,
            _expires: 3650
        }), window.sessionCookieStorage = a.extend({}, o, {_prefix: l + window.name + "_"})), window.cookieStorage = a.extend({}, o), a.cookieStorage = a.extend({}, n, {
            _type: "cookieStorage",
            setExpires: function (a) {
                return window.cookieStorage.setExpires(a), this
            },
            setPath: function (a) {
                return window.cookieStorage.setPath(a), this
            },
            setDomain: function (a) {
                return window.cookieStorage.setDomain(a), this
            },
            setConf: function (a) {
                return window.cookieStorage.setConf(a), this
            },
            setDefaultConf: function () {
                return window.cookieStorage.setDefaultConf(), this
            }
        })
    }
    a.initNamespaceStorage = function (a) {
        return i(a)
    }, m ? (a.localStorage = a.extend({}, n, {_type: "localStorage"}), a.sessionStorage = a.extend({}, n, {_type: "sessionStorage"})) : (a.localStorage = a.extend({}, n, {_type: "localCookieStorage"}), a.sessionStorage = a.extend({}, n, {_type: "sessionCookieStorage"})), a.namespaceStorages = {}, a.removeAllStorages = function (b) {
        a.localStorage.removeAll(b), a.sessionStorage.removeAll(b), a.cookieStorage && a.cookieStorage.removeAll(b), b || (a.namespaceStorages = {})
    }
});
//# sourceMappingURL=jquery-storageapi.min.js.map